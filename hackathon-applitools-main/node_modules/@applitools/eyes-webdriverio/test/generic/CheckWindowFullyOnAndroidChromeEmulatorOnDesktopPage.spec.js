// check window fully on android chrome emulator on desktop page
const cwd = process.cwd()
const path = require('path')
const assert = require('assert')
const spec = require(path.resolve(cwd, 'src/spec-driver'))
const {testSetup, getTestInfo} = require('@applitools/sdk-shared')

describe.skip('Coverage Tests', () => {
  let driver, destroyDriver, eyes
  beforeEach(async () => {
    ;[driver, destroyDriver] = await spec.build({
      device: 'Android 8.0 Chrome Emulator',
    })
    eyes = testSetup.getEyes({
      displayName:
        'check window fully on android chrome emulator on desktop page',
      baselineName: 'Android Emulator 8.0 Portrait desktop fully',
      parentBranchName: 'default',
    })
  })
  afterEach(async () => {
    await destroyDriver(driver)
    await eyes.abort()
  })
  it('check window fully on android chrome emulator on desktop page (@native @mobile @headfull)', async () => {
    await spec.visit(
      driver,
      'https://applitools.github.io/demo/TestPages/DynamicResolution/desktop.html'
    )
    await eyes.open(
      driver,
      'Eyes Selenium SDK - iOS Safari Cropping',
      'Android Emulator 8.0 Portrait desktop fully',
      undefined
    )
    await eyes.check({isFully: true})
    await eyes.close(undefined)
  })
})
