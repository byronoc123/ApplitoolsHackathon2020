// should return actual viewport size
const cwd = process.cwd()
const path = require('path')
const assert = require('assert')
const spec = require(path.resolve(cwd, 'src/spec-driver'))
const {testSetup, getTestInfo} = require('@applitools/sdk-shared')

describe('Coverage Tests', () => {
  let driver, destroyDriver, eyes
  beforeEach(async () => {
    ;[driver, destroyDriver] = await spec.build({
      browser: 'chrome',
      headless: false,
    })
    eyes = testSetup.getEyes({
      displayName: 'should return actual viewport size',
      baselineName: 'ShouldReturnActualViewportSize',
    })
  })
  afterEach(async () => {
    await destroyDriver(driver)
    await eyes.abort()
  })
  it('should return actual viewport size (@headfull @chrome)', async () => {
    await eyes.open(
      driver,
      'Eyes Selenium SDK - Fluent API',
      'ShouldReturnActualViewportSize',
      {width: 5000, height: 5000}
    )
    const cachedViewportSize = await eyes.getViewportSize()
    const expectedViewportSize = await spec.executeScript(
      driver,
      'return {height: window.innerHeight, width: window.innerWidth}',
      ...[]
    )
    assert.deepStrictEqual(
      cachedViewportSize['getWidth'](...[]),
      expectedViewportSize['width'],
      undefined
    )
    assert.deepStrictEqual(
      cachedViewportSize['getHeight'](...[]),
      expectedViewportSize['height'],
      undefined
    )
    await eyes.close(false)
  })
})
