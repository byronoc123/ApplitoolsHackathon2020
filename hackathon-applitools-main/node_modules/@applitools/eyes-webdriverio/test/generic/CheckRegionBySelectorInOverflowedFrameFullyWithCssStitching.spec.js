// check region by selector in overflowed frame fully with css stitching
const cwd = process.cwd()
const path = require('path')
const assert = require('assert')
const spec = require(path.resolve(cwd, 'src/spec-driver'))
const {testSetup, getTestInfo} = require('@applitools/sdk-shared')

describe('Coverage Tests', () => {
  let driver, destroyDriver, eyes
  beforeEach(async () => {
    ;[driver, destroyDriver] = await spec.build({browser: 'chrome'})
    eyes = testSetup.getEyes({
      displayName:
        'check region by selector in overflowed frame fully with css stitching',
      stitchMode: 'CSS',
      baselineName: 'CheckRegionInFrameLargerThenViewport',
    })
  })
  afterEach(async () => {
    await destroyDriver(driver)
    await eyes.abort()
  })
  it('check region by selector in overflowed frame fully with css stitching', async () => {
    await spec.visit(
      driver,
      'https://applitools.github.io/demo/TestPages/OutOfViewport/'
    )
    await eyes.open(
      driver,
      'Applitools Eyes SDK',
      'CheckRegionInFrameLargerThenViewport',
      {width: 800, height: 600}
    )
    await eyes.check({
      region: '#list',
      scrollRootElement: 'body',
      frames: [{frame: 'frame-list', scrollRootElement: 'body'}],
      isFully: true,
    })
    await eyes.close(undefined)
  })
})
