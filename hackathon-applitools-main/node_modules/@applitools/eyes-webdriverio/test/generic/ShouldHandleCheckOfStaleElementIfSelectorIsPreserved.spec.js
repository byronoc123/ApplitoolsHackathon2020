// should handle check of stale element if selector is preserved
const cwd = process.cwd()
const path = require('path')
const assert = require('assert')
const spec = require(path.resolve(cwd, 'src/spec-driver'))
const {testSetup, getTestInfo} = require('@applitools/sdk-shared')

describe.skip('Coverage Tests', () => {
  let driver, destroyDriver, eyes
  beforeEach(async () => {
    ;[driver, destroyDriver] = await spec.build({browser: 'chrome'})
    eyes = testSetup.getEyes({
      displayName:
        'should handle check of stale element if selector is preserved',
      baselineName: 'ShouldHandleCheckOfStaleElementIfSelectorIsPreserved',
    })
  })
  afterEach(async () => {
    await destroyDriver(driver)
    await eyes.abort()
  })
  it('should handle check of stale element if selector is preserved (@webdriver)', async () => {
    await spec.visit(
      driver,
      'http://localhost:5000/TestPages/RefreshDomPage/auto-refresh'
    )
    await eyes.open(
      driver,
      'Applitools Eyes SDK',
      'ShouldHandleCheckOfStaleElementIfSelectorIsPreserved',
      {width: 600, height: 500}
    )
    const var_3 = await spec.findElement(driver, '#inner-img')
    await spec.click(driver, '#refresh-button')
    await eyes.check({region: var_3})
    await eyes.close(undefined)
  })
})
