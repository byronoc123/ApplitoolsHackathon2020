// should send accessibility regions by selector with scroll stitching
const cwd = process.cwd()
const path = require('path')
const assert = require('assert')
const spec = require(path.resolve(cwd, 'src/spec-driver'))
const {testSetup, getTestInfo} = require('@applitools/sdk-shared')

describe('Coverage Tests', () => {
  let driver, destroyDriver, eyes
  beforeEach(async () => {
    ;[driver, destroyDriver] = await spec.build({browser: 'chrome'})
    eyes = testSetup.getEyes({
      displayName:
        'should send accessibility regions by selector with scroll stitching',
      defaultMatchSettings: {
        accessibilitySettings: {level: 'AAA', guidelinesVersion: 'WCAG_2_0'},
      },
      stitchMode: 'Scroll',
      baselineName: 'TestAccessibilityRegions_Scroll',
    })
  })
  afterEach(async () => {
    await destroyDriver(driver)
    await eyes.abort()
  })
  it('should send accessibility regions by selector with scroll stitching', async () => {
    await spec.visit(
      driver,
      'https://applitools.github.io/demo/TestPages/FramesTestPage/'
    )
    await eyes.open(
      driver,
      'Eyes Selenium SDK - Fluent API',
      'TestAccessibilityRegions_Scroll',
      {width: 700, height: 460}
    )
    await eyes.check({
      accessibilityRegions: [{region: '.ignore', type: 'LargeText'}],
    })
    const results = await eyes.close(undefined)
    const info = await getTestInfo(results)
    assert.deepStrictEqual(
      info['actualAppOutput']['0']['imageMatchSettings'][
        'accessibilitySettings'
      ]['level'],
      'AAA',
      undefined
    )
    assert.deepStrictEqual(
      info['actualAppOutput']['0']['imageMatchSettings'][
        'accessibilitySettings'
      ]['version'],
      'WCAG_2_0',
      undefined
    )
    assert.deepStrictEqual(
      info['actualAppOutput']['0']['imageMatchSettings']['accessibility']['0'],
      {
        isDisabled: false,
        type: 'LargeText',
        left: 10,
        top: 286,
        width: 800,
        height: 500,
      },
      undefined
    )
    assert.deepStrictEqual(
      info['actualAppOutput']['0']['imageMatchSettings']['accessibility']['1'],
      {
        isDisabled: false,
        type: 'LargeText',
        left: 122,
        top: 933,
        width: 456,
        height: 306,
      },
      undefined
    )
    assert.deepStrictEqual(
      info['actualAppOutput']['0']['imageMatchSettings']['accessibility']['2'],
      {
        isDisabled: false,
        type: 'LargeText',
        left: 8,
        top: 1277,
        width: 690,
        height: 206,
      },
      undefined
    )
  })
})
