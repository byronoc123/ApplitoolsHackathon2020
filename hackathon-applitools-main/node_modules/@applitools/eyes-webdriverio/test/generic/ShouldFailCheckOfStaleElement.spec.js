// should fail check of stale element
const cwd = process.cwd()
const path = require('path')
const assert = require('assert')
const spec = require(path.resolve(cwd, 'src/spec-driver'))
const {testSetup, getTestInfo} = require('@applitools/sdk-shared')

describe('Coverage Tests', () => {
  let driver, destroyDriver, eyes
  beforeEach(async () => {
    ;[driver, destroyDriver] = await spec.build({browser: 'chrome'})
    eyes = testSetup.getEyes({
      displayName: 'should fail check of stale element',
      baselineName: 'ShouldFailCheckOfStaleElement',
    })
  })
  afterEach(async () => {
    await destroyDriver(driver)
    await eyes.abort()
  })
  it('should fail check of stale element (@webdriver)', async () => {
    await spec.visit(
      driver,
      'https://applitools.github.io/demo/TestPages/RefreshDomPage'
    )
    await eyes.open(
      driver,
      'Applitools Eyes SDK',
      'ShouldFailCheckOfStaleElement',
      {width: 600, height: 500}
    )
    const var_3 = await spec.findElement(driver, '#inner-img')
    await spec.click(driver, '#invalidate-button')
    await assert.rejects(
      async () => {
        await eyes.check({region: var_3})
      },
      error => {
        const var_8 = spec.isStaleElementError(error)
        return var_8
      },
      undefined
    )
    await eyes.close(false)
  })
})
